library(tidyverse)
library(ggplot2)
library(maps)
library(plotly)
library(caret)
install.packages("caret")
library(tidyverse)
library(ggplot2)
library(maps)
library(plotly)
library(caret)
covid = read.csv("owid-covid-data")
covid = read.csv("owid-covid-data.csv")
glimpse(covid)
library(tidyverse)
library(ggplot2)
library(maps)
library(plotly)
library(caret)
covid = read.csv("owid-covid-data.csv")
glimpse(covid)
covid2 = covid %>% drop_na(new_cases, new_cases_smoothed, total_deaths, new_deaths, new_deaths_smoothed, total_cases_per_million, new_cases_per_million, new_cases_smoothed_per_million, total_deaths_per_million, new_deaths_per_million, new_deaths_smoothed_per_million, new_vaccinations, new_vaccinations_smoothed, new_vaccinations_smoothed_per_million, population, population_density, median_age,extreme_poverty, new_tests)
glimpse(covid2)
unique(covid2$location)
print(123)
library(tidyverse)
library(ggplot2)
library(maps)
library(plotly)
library(caret)
library(dplyr)
covid = read.csv("D:/data/owid-covid-data.csv")
library(tidyverse)
library(ggplot2)
library(maps)
library(plotly)
library(caret)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(maps)
library(plotly)
library(caret)
library(dplyr)
covid = read.csv("owid-covid-data.csv")
glimpse(covid)
covid2 = covid %>% drop_na(new_cases, new_cases_smoothed, total_deaths, new_deaths, new_deaths_smoothed, total_cases_per_million, new_cases_per_million, new_cases_smoothed_per_million, total_deaths_per_million, new_deaths_per_million, new_deaths_smoothed_per_million, new_vaccinations, new_vaccinations_smoothed, new_vaccinations_smoothed_per_million, population, population_density, median_age,extreme_poverty, new_tests)
glimpse(covid2)
unique(covid2$location)
covid1 <- covid2
covid1$month <- strftime(covid1$date, "%m")
covid1$year  <- strftime(covid1$date, "%Y")
covid1_aggregate <- aggregate(new_cases_smoothed~month+year,
covid1,
FUN = sum)
covid1_aggregate$concatenated <- paste(covid1_aggregate$month, covid1_aggregate$year)
covid3 <- covid1_aggregate %>% mutate(month_year = as.Date(covid1_aggregate$concatenated,  format="%m-%y"))
ggplot(covid1_aggregate, aes(x= new_cases_smoothed, y= concatenated)) +
geom_bar(stat = 'identity')
library(tidyverse)
library(ggplot2)
library(maps)
library(plotly)
library(caret)
library(dplyr)
covid = read.csv("owid-covid-data.csv")
glimpse(covid)
covid_clean = covid %>% drop_na(new_cases, new_cases_smoothed, total_deaths, new_deaths, new_deaths_smoothed, total_cases_per_million, new_cases_per_million, new_cases_smoothed_per_million, total_deaths_per_million, new_deaths_per_million, new_deaths_smoothed_per_million, new_vaccinations, new_vaccinations_smoothed, new_vaccinations_smoothed_per_million, population, population_density, median_age,extreme_poverty, new_tests, new_people_vaccinated_smoothed)
glimpse(covid_clean)
unique(covid_clean$location)
covid_temp <- covid_clean
covid_temp$month <- strftime(covid_temp$date, "%m")
covid_temp$year  <- strftime(covid_temp$date, "%Y")
covid_temp_new_case_aggregate <- aggregate(new_cases_smoothed~month+year,
covid_temp,
FUN = mean)
covid_temp_new_case_aggregate$month_year <- paste(covid_temp_new_case_aggregate$month, covid_temp_new_case_aggregate$year)
ggplot(covid_temp_new_case_aggregate, aes(x= new_cases_smoothed, y= month_year)) +
geom_bar(stat = 'identity') + ggtitle("Average New Cases (Smoothed) per Month") +
ylab("month year") + xlab("average new cases")
covid_temp = covid_clean %>% select(date,new_people_vaccinated_smoothed)
covid_temp$date <- as.Date(covid_temp$date, format = "%Y-%m-%d")
covid_temp_new_vaccinated_aggregate = covid_temp %>% mutate(month_year = as.character(format(date, "%m-%Y"))) %>%
group_by(month_year) %>%
summarise(date=date[1], number = mean(new_people_vaccinated_smoothed))
covid_temp_new_vaccinated_aggregate
ggplot(covid_temp_new_vaccinated_aggregate, aes(x = number, y= month_year)) +
geom_bar(stat = 'identity') + ggtitle("Average New People Vaccinated (Smoothed) per Month") +
ylab("month year") + xlab("average new people vaccinated")
library(tidyverse)
library(ggplot2)
library(maps)
library(plotly)
library(caret)
library(dplyr)
library(lubridate)
covid = read.csv("owid-covid-data.csv")
# these are indices for each country (an index is just a collection of stocks)
# 'FileEncoding' just cleans the column encoding for this case
sp500 = read.csv("SPY Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for US
TOPIX = read.csv("TOPIX Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for Japan
ASX200 = read.csv("S&P_ASX 200 Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for Australia
NSEI = read.csv("Nifty 50 Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for India
SSEC = read.csv("Shanghai Composite Historical Data.csv", fileEncoding = 'UTF-8-BOM') # this is for China
glimpse(covid)
#Dropping NA
covid_clean = covid %>% drop_na(new_cases, new_cases_smoothed, new_vaccinations, new_vaccinations_smoothed, new_vaccinations_smoothed_per_million, population, median_age, extreme_poverty, total_vaccinations, hospital_beds_per_thousand, human_development_index)
#This code changes the negative case values in the data set to zero
covid_clean$new_cases[covid_clean$new_cases < 0] <- 0
glimpse(covid_clean)
unique(covid_clean$location)
# using a copy just in case
covid2 <- covid_clean
sp500$Date = mdy(sp500$Date)
TOPIX$Date = mdy(TOPIX$Date)
ASX200$Date = mdy(ASX200$Date)
NSEI$Date = mdy(NSEI$Date)
SSEC$Date = mdy(SSEC$Date)
covid2$date = ymd(covid2$date)
#Temporarily changing the date to character as joining cannot be done with date objects
#Also selecting relevant columns for analysis later
covid2 <- covid2 %>%
transform(covid2, date = as.character(date)) %>%
select(date, new_cases, new_deaths, location, new_vaccinations)
sp500$Date <- as.character(sp500$Date)
TOPIX$Date <- as.character(TOPIX$Date)
ASX200$Date <- as.character(ASX200$Date)
NSEI$Date <- as.character(NSEI$Date)
SSEC$Date <- as.character(SSEC$Date)
# renaming column so it has same name as the stock market data frames for joining later
colnames(covid2)[1] = "Date"
# making data frames for each country we select to perform individual joins on each to their respective stock market index
covid_US <- covid2 %>% filter(location == "United States")
covid_AUS <- covid2 %>% filter(location == "Australia")
covid_IND <- covid2 %>% filter(location == "India")
covid_JPN <- covid2 %>% filter(location == "Japan")
covid_CHN <- covid2 %>% filter(location == "China")
# performing joins
df_1 = inner_join(sp500, covid_US, by = "Date")
df_2 = inner_join(TOPIX, covid_JPN, by = "Date")
df_3 = inner_join(ASX200, covid_AUS, by = "Date")
df_4 = inner_join(NSEI, covid_IND, by = "Date")
df_5 = inner_join(SSEC, covid_CHN, by = "Date")
# vertically joined data set (now one column will store all the values of the respective country index)
# e.g US stores prices relevant to S&P500 and China's prices are relevant to the the SSEC which is based in Shanghai.
covid_joined <- rbind(df_1, df_2, df_3, df_4, df_5)
# Still need transform relevant column to numeric ect...will do a little later
df_aus <- df_3
covid_temp <- covid_clean
covid_temp$month <- strftime(covid_temp$date, "%m")
covid_temp$year  <- strftime(covid_temp$date, "%Y")
covid_temp_new_case_aggregate <- aggregate(new_cases_smoothed~month+year,
covid_temp,
FUN = mean)
covid_temp_new_case_aggregate$month_year <- paste(covid_temp_new_case_aggregate$month, covid_temp_new_case_aggregate$year)
ggplot(covid_temp_new_case_aggregate, aes(x= new_cases_smoothed, y= month_year)) +
geom_bar(stat = 'identity') + ggtitle("Average New Cases (Smoothed) per Month") +
ylab("month year") + xlab("average new cases")
covid_temp = covid_clean %>% select(date,new_people_vaccinated_smoothed)
covid_temp$date <- as.Date(covid_temp$date, format = "%Y-%m-%d")
covid_temp_new_vaccinated_aggregate = covid_temp %>% mutate(month_year = as.character(format(date, "%m-%Y"))) %>%
group_by(month_year) %>%
summarise(date=date[1], number = mean(new_people_vaccinated_smoothed))
covid_temp_new_vaccinated_aggregate
ggplot(covid_temp_new_vaccinated_aggregate, aes(x = number, y= month_year)) +
geom_bar(stat = 'identity') + ggtitle("Average New People Vaccinated (Smoothed) per Month") +
ylab("month year") + xlab("average new people vaccinated")
ggplot(covid_temp_new_vaccinated_aggregate, aes(x = number, y= month_year)) +
geom_bar(stat = 'identity') + ggtitle("Average New People Vaccinated (Smoothed) per Month") +
ylab("month year") + xlab("average new people vaccinated")
glimpse(df_aus)
df_aus_subset = df_aus %>% select(Price, new_cases)
df_aus_subset$Price <- as.numeric(gsub(",","",df_aus_subset$Price))
df_aus_subset
M0 = lm(Price ~ new_cases, data = df_aus_subset) # Null model
summary(M0)
library(tidyverse)
library(ggplot2)
library(maps)
library(plotly)
library(caret)
library(dplyr)
library(lubridate)
covid = read.csv("owid-covid-data.csv")
# these are indices for each country (an index is just a collection of stocks)
# 'FileEncoding' just cleans the column encoding for this case
sp500 = read.csv("SPY Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for US
TOPIX = read.csv("TOPIX Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for Japan
ASX200 = read.csv("S&P_ASX 200 Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for Australia
NSEI = read.csv("Nifty 50 Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for India
SSEC = read.csv("Shanghai Composite Historical Data.csv", fileEncoding = 'UTF-8-BOM') # this is for China
glimpse(covid)
#Dropping NA
covid_clean = covid %>% drop_na(new_cases, new_cases_smoothed, new_vaccinations, new_vaccinations_smoothed, new_vaccinations_smoothed_per_million, population, median_age, extreme_poverty, total_vaccinations, hospital_beds_per_thousand, human_development_index)
#This code changes the negative case values in the data set to zero
covid_clean$new_cases[covid_clean$new_cases < 0] <- 0
glimpse(covid_clean)
unique(covid_clean$location)
#code for more optimised join (to be pasted later)
# using a copy just in case
covid2 <- covid_clean
sp500$Date = mdy(sp500$Date)
TOPIX$Date = mdy(TOPIX$Date)
ASX200$Date = mdy(ASX200$Date)
NSEI$Date = mdy(NSEI$Date)
SSEC$Date = mdy(SSEC$Date)
covid2$date = ymd(covid2$date)
#Temporarily changing the date to character as joining cannot be done with date objects
#Also selecting relevant columns for analysis later
covid2 <- covid2 %>%
transform(covid2, date = as.character(date)) %>%
select(date, new_cases, new_deaths, location, new_vaccinations)
sp500$Date <- as.character(sp500$Date)
TOPIX$Date <- as.character(TOPIX$Date)
ASX200$Date <- as.character(ASX200$Date)
NSEI$Date <- as.character(NSEI$Date)
SSEC$Date <- as.character(SSEC$Date)
# renaming column so it has same name as the stock market data frames for joining later
colnames(covid2)[1] = "Date"
# making data frames for each country we select to perform individual joins on each to their respective stock market index
covid_US <- covid2 %>% filter(location == "United States")
covid_AUS <- covid2 %>% filter(location == "Australia")
covid_IND <- covid2 %>% filter(location == "India")
covid_JPN <- covid2 %>% filter(location == "Japan")
covid_CHN <- covid2 %>% filter(location == "China")
# performing joins
df_1 = inner_join(sp500, covid_US, by = "Date")
df_2 = inner_join(TOPIX, covid_JPN, by = "Date")
df_3 = inner_join(ASX200, covid_AUS, by = "Date")
df_4 = inner_join(NSEI, covid_IND, by = "Date")
df_5 = inner_join(SSEC, covid_CHN, by = "Date")
# vertically joined data set (now one column will store all the values of the respective country index)
# e.g US stores prices relevant to S&P500 and China's prices are relevant to the the SSEC which is based in Shanghai.
covid_joined <- rbind(df_1, df_2, df_3, df_4, df_5)
# Still need transform relevant column to numeric ect...will do a little later
df_aus <- df_3
covid_temp <- covid_clean
covid_temp$month <- strftime(covid_temp$date, "%m")
covid_temp$year  <- strftime(covid_temp$date, "%Y")
covid_temp_new_case_aggregate <- aggregate(new_cases_smoothed~month+year,
covid_temp,
FUN = mean)
covid_temp_new_case_aggregate$month_year <- paste(covid_temp_new_case_aggregate$month, covid_temp_new_case_aggregate$year)
ggplot(covid_temp_new_case_aggregate, aes(x= new_cases_smoothed, y= month_year)) +
geom_bar(stat = 'identity') + ggtitle("Average New Cases (Smoothed) per Month") +
ylab("month year") + xlab("average new cases")
covid_temp = covid_clean %>% select(date,new_people_vaccinated_smoothed)
covid_temp$date <- as.Date(covid_temp$date, format = "%Y-%m-%d")
covid_temp_new_vaccinated_aggregate = covid_temp %>% mutate(month_year = as.character(format(date, "%m-%Y"))) %>%
group_by(month_year) %>%
summarise(date=date[1], number = mean(new_people_vaccinated_smoothed))
covid_temp_new_vaccinated_aggregate
ggplot(covid_temp_new_vaccinated_aggregate, aes(x = number, y= month_year)) +
geom_bar(stat = 'identity') + ggtitle("Average New People Vaccinated (Smoothed) per Month") +
ylab("month year") + xlab("average new people vaccinated")
glimpse(df_aus)
df_aus_subset = df_aus %>% select(Price, new_cases)
df_aus_subset$Price <- as.numeric(gsub(",","",df_aus_subset$Price))
df_aus_subset
M0 = lm(Price ~ new_cases, data = df_aus_subset) # Null model
summary(M0)
