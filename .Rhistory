Date >= "2020-03-11" & Date < "2021-01-01" ~ "1st year",
Date >= "2021-01-01" & Date < "2022-01-01" ~ "2nd year",
Date >= "2022-01-01" & Date < "2023-01-01" ~ "3rd year (ongoing)"))
# not using the ggplot but leaving it here in case, instead using the plotly becuase it is interactive
#ggplot(covid_joined, aes(x=Change.., y = location, fill = Year_category)) + geom_boxplot(outlier.colour="black",
#             outlier.size=0.3, notch=TRUE) + theme_clean() + labs(y = "country", x = "Distribution of daily #gains/losses (%)") +
#ggtitle("Distrubtion of daily gains/losses during the years of the pandemic")
fig <- plot_ly(covid_joined, x = ~Change.., y = ~location, color = ~Year_category, type = "box") %>% layout(boxmode = "group", title = 'Distribution of gains and losses over the pandemic',
xaxis = list(showgrid = TRUE),
yaxis = list(showgrid = TRUE))
unique(covid_joined$location)
head(covid_joined)
# Asset tickers
tickers = c("SPY")
price_data <- tq_get(tickers,
from = '2017-12-27',
to = '2021-12-27',
get = 'stock.prices')
price_data
ret_data <- price_data %>%
group_by(symbol) %>%
tq_transmute(select = adjusted,
mutate_fun = periodReturn,
period = "daily",
col_rename = "ret")
#covid_clean
df_q2_chn = df_q2 %>% filter(location == "China")
#covid_clean
df_q2_chn = df_q2 %>% filter(location == "China")
glimpse(df_aus)
df_aus$LpriceP = log(df_aus$Price/log(df_aus$Price))
df_aus$Lnew_vaccinationsP = log(df_aus$new_vaccinations/log(df_aus$new_vaccinations))
df_aus$Lnew_testsP = log(df_aus$new_tests/log(df_aus$new_tests))
glimpse(df_aus)
df_aus$LpriceP = log(df_aus$Price/log(df_aus$Price))
df_aus$Lnew_vaccinationsP = log(df_aus$new_vaccinations/log(df_aus$new_vaccinations))
df_aus$Lnew_testsP = log(df_aus$new_tests/log(df_aus$new_tests))
df_q2 = covid_joined
colnames(df_q2)[7] = 'Change'
write.csv(df_q2,"df_q2.csv")
mySymbols <- c('AMZN', '^GSPC','NFLX','MSFT','GOOG','NVAX','DIS','WMT','COST','V','FB','AXP','CMCSA','PFE','MRNA')
myStocks <-lapply(mySymbols, function(x) {getSymbols(x, src = "yahoo",
from = "2020-01-01",
to = "2022-04-04",
periodicity = "daily",
auto.assign=FALSE)} )
closePrices <- lapply(myStocks, Cl)
closePrices <- as.data.frame(do.call(merge, closePrices))
closePrices <- na.omit(log(closePrices/lag(closePrices)))
closePrices <- rownames_to_column(closePrices, "Date")
date <- closePrices["Date"]
date
# will need to probably write a function for this later as at the moment i am just hard coding this
corr_AMZN <- as.data.frame(roll_cor(closePrices$AMZN.Close, closePrices$GSPC.Close, width = 150)) %>% cbind(date) %>% na.omit
corr_NFLX <- as.data.frame(roll_cor(closePrices$NFLX.Close, closePrices$GSPC.Close, width = 150))%>% cbind(date) %>% na.omit
corr_MSFT <- as.data.frame(roll_cor(closePrices$MSFT.Close, closePrices$GSPC.Close, width = 150))%>% cbind(date) %>% na.omit
corr_GOOG <- as.data.frame(roll_cor(closePrices$GOOG.Close, closePrices$GSPC.Close, width = 150))%>% cbind(date) %>% na.omit
corr_NVAX <- as.data.frame(roll_cor(closePrices$NVAX.Close, closePrices$GSPC.Close, width = 150))%>% cbind(date) %>% na.omit
corr_DIS <- as.data.frame(roll_cor(closePrices$DIS.Close, closePrices$GSPC.Close, width = 150))%>% cbind(date) %>% na.omit
corr_WMT <- as.data.frame(roll_cor(closePrices$WMT.Close, closePrices$GSPC.Close, width = 150))%>% cbind(date) %>% na.omit
corr_COST <- as.data.frame(roll_cor(closePrices$COST.Close, closePrices$GSPC.Close, width = 150))%>% cbind(date) %>% na.omit
corr_V <- as.data.frame(roll_cor(closePrices$V.Close, closePrices$GSPC.Close, width = 150))%>% cbind(date) %>% na.omit
corr_FB <- as.data.frame(roll_cor(closePrices$FB.Close, closePrices$GSPC.Close, width = 150))%>% cbind(date) %>% na.omit
corr_AXP <- as.data.frame(roll_cor(closePrices$AXP.Close, closePrices$GSPC.Close, width = 150))%>% cbind(date) %>% na.omit
corr_CMCSA <- as.data.frame(roll_cor(closePrices$CMCSA.Close, closePrices$GSPC.Close, width = 150))%>% cbind(date) %>% na.omit
corr_PFE <- as.data.frame(roll_cor(closePrices$PFE.Close, closePrices$GSPC.Close, width = 150))%>% cbind(date) %>% na.omit
corr_MRNA <- as.data.frame(roll_cor(closePrices$MRNA.Close, closePrices$GSPC.Close, width = 150))%>% cbind(date) %>% na.omit
corr_AMZN$symbol <- "AMZN"
corr_NFLX$symbol <- "NFLX"
corr_GOOG$symbol <- "GOOG"
corr_NVAX$symbol <- "NVAX"
corr_V$symbol <- "VISA"
corr_FB$symbol <- "FB"
corr_MSFT$symbol <- "MSFT"
corr_PFE$symbol <- "PFE"
corr_MRNA$symbol <- "MRNA"
colnames(corr_AMZN)[1] = "corr"
colnames(corr_NFLX)[1] = "corr"
colnames(corr_MSFT)[1] = "corr"
colnames(corr_GOOG)[1] = "corr"
colnames(corr_NVAX)[1] = "corr"
colnames(corr_DIS)[1] = "corr"
colnames(corr_WMT)[1] = "corr"
colnames(corr_COST)[1] = "corr"
colnames(corr_V)[1] = "corr"
colnames(corr_FB)[1] = "corr"
colnames(corr_AXP)[1] = "corr"
colnames(corr_CMCSA)[1] = "corr"
colnames(corr_PFE)[1] = "corr"
colnames(corr_MRNA)[1] = "corr"
corr_joined = rbind(corr_AMZN, corr_NFLX, corr_GOOG, corr_NVAX, corr_V, corr_FB, corr_MSFT, corr_PFE, corr_MRNA)
corr_joined$Date <- as.Date(corr_joined$Date)
corr_joined
p = ggplot(corr_joined, aes(x=Date, y=corr, colour = symbol)) + geom_line() + labs(x = "Date", y = "rolling correlation (150D period)") + ggtitle("examining correlation of vaccine macufacturers compared to typical stocks") + theme_clean()
ggplotly(p)
colnames(df_q2)
p1 = ggplot(data = df_q2, aes(x = Date)) + geom_line(aes(y=new_cases), color = 'red') +
geom_line(aes(y=new_vaccinations), color = 'light green') +
geom_line(aes(y=new_tests), color = 'light blue') +
ggtitle("vacc tests and new cases and date") + xlab("date") +
ylab("values")+
theme_bw()
ggplotly(p1)
df_q2_scatter_plot_price_var_fac = function(plot_df, xvar, xvar_lab, title) {
p1 = ggplot(data = plot_df, aes(x = xvar, group=location, color = location)) +
geom_point(aes(y=Price)) +
facet_grid(location ~ .) +
ggtitle(title) + xlab(xvar_lab) +
ylab("Price") +
theme_bw()
p1
}
df_q2_scatter_plot_price_var = function(plot_df, xvar, xvar_lab, title) {
p1 = ggplot(data = plot_df, aes(x = xvar)) +
geom_point(aes(y=Price)) +
ggtitle(title) + xlab(xvar_lab) +
ylab("Price") +
theme_bw()
p1
}
df_q2_scatter_plot_Lprice_var_fac = function(plot_df, xvar, xvar_lab, title) {
p1 = ggplot(data = plot_df, aes(x = xvar, group=location, color = location)) +
geom_point(aes(y=Price)) +
facet_grid(location ~ .) +
ggtitle(title) + xlab(xvar_lab) +
ylab("Price") +
theme_bw()
p1
}
df_q2_scatter_plot_Lprice_var = function(plot_df, xvar, xvar_lab, title) {
p1 = ggplot(data = plot_df, aes(x = xvar)) +
geom_point(aes(y=Lprice)) +
ggtitle(title) + xlab(xvar_lab) +
ylab("Price") +
theme_bw()
p1
}
df_q2$Lprice = log(df_q2$Price/log(df_q2$Price))
df_q2$Lnew_vaccinations = log(df_q2$new_vaccinations/log(df_q2$new_vaccinations))
df_q2$Lnew_tests = log(df_q2$new_tests/log(df_q2$new_tests))
df_q2$Lnew_cases = log(df_q2$new_cases/log(df_q2$new_cases))
df_q2_scatter_plot_Lprice_var_fac(df_q2, df_q2$Lnew_tests, "new_tests", "log(Price~Log(new_tests")
df_q2_scatter_plot_Lprice_var_fac(df_q2, df_q2$Lnew_vaccinations, "new_vaccinations", "log(Price~Log(new_vaccinations")
df_q2_scatter_plot_Lprice_var_fac(df_q2, df_q2$Lnew_cases, "new_vaccinations", "log(Price~Log(new_cases")
df_q2_aus = df_q2 %>% filter(location == "Australia")
df_q2_scatter_plot_Lprice_var(df_q2_aus, df_q2_aus$Lnew_tests, "new_tests", "Australia Log(Price~Log(new_tests")
df_q2_scatter_plot_Lprice_var(df_q2_aus, df_q2_aus$Lnew_vaccinations, "new_vaccinations", "Australia Log(Price~Log(new_vaccinations")
df_q2_scatter_plot_Lprice_var(df_q2_aus, df_q2_aus$Lnew_cases, "new_cases", "Australia Log(Price~Log(new_cases")
df_q2_aus = drop_na(df_q2_aus, Lprice, Lnew_tests, Lnew_vaccinations)
#M2 = lm(Lprice ~ Lnew_tests + Lnew_vaccinations, data=df_q2_aus)
#summary(M2)
ggplot(data = df_q2_aus) + geom_point(aes(x = new_tests, y = Lprice), color = "light blue") +
geom_point(aes(x = new_vaccinations, y = Lprice), color = "light green") +
ggtitle("Prices of stocks against new tests and new_vaccinations") + ylab("Price") +theme_classic()
M = lm(Lprice ~ polym(new_tests, new_vaccinations, degree=2, raw=TRUE), data=df_q2_aus)
summary(M)
glimpse(df_aus)
df_aus$LpriceP = log(df_aus$Price/log(df_aus$Price))
df_aus$Lnew_vaccinationsP = log(df_aus$new_vaccinations/log(df_aus$new_vaccinations))
df_aus$Lnew_testsP = log(df_aus$new_tests/log(df_aus$new_tests))
glimpse(df_aus)
df_aus$LpriceP = log(df_aus$Price/log(df_aus$Price))
df_aus$Lnew_vaccinationsP = log(df_aus$new_vaccinations/log(df_aus$new_vaccinations))
df_aus$Lnew_testsP = log(df_aus$new_tests/log(df_aus$new_tests))
glimpse(df_aus)
df_aus$LpriceP = log(df_aus$Price/log(df_aus$Price))
df_aus$Lnew_vaccinationsP = log(df_aus$new_vaccinations/log(df_aus$new_vaccinations))
df_aus$Lnew_testsP = log(df_aus$new_tests/log(df_aus$new_tests))
M = lm(LpriceP ~ Lnew_testsP+Lnew_vaccinationsP, data=df_q2_aus)
#covid_clean
df_q2_chn = df_q2 %>% filter(location == "China")
df_q2_jpn = df_q2 %>% filter(location == "Japan")
df_q2_usa = df_q2 %>% filter(location == "Uniated States")
df_q2_ind = df_q2 %>% filter(location=="Indian")
chn_beta_price_case = beta(df_q2_chn$Lprice, df_q2_chn$Lnew_cases)
jpn_beta_price_case = beta(df_q2_jpn$Lprice, df_q2_jpn$Lnew_cases)
usa_beta_price_case = beta(df_q2_usa$Lprice, df_q2_usa$Lnew_cases)
ind_beta_price_case = beta(df_q2_ind$Lprice, df_q2_ind$Lnew_cases)
aus_beta_price_case = beta(df_q2_aus$Lprice, df_q2_aus$Lnew_cases)
plot(jpn_beta_price_case)
line(chn_beta_price_case, col = "red")
library(tidyverse)
library(ggplot2)
library(maps)
library(plotly)
library(caret)
library(dplyr)
library(lubridate)
library(scales)
library(magrittr)
library(tidyr)
library(pkr)
library(plotly)
library(ggthemes)
library(tseries)
library(quantmod)
library(roll)
library(plotly)
library(gganimate)
library(tidyquant)
##########################
# THIS IS THE FINAL JOIN #
#######################################################################
# use covid_joined for your work and filter it to country if you need #
#######################################################################
covid = read.csv("owid-covid-data.csv")
sp500 = read.csv("SPY Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for US
TOPIX = read.csv("TOPIX Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for Japan
ASX200 = read.csv("S&P_ASX 200 Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for Australia
NSEI = read.csv("Nifty 50 Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for India
SSEC = read.csv("Shanghai Composite Historical Data.csv", fileEncoding = 'UTF-8-BOM') # this is for China
covid2 <- covid
sp <- sp500
sp$Change.. <- as.numeric(gsub("%","",sp$Change..))
max = max(sp$Change..)
max
covid2$date = as.character(ymd(covid2$date))
sp500$Date <- as.character(mdy(sp500$Date))
TOPIX$Date <- as.character(mdy(TOPIX$Date))
ASX200$Date <- as.character(mdy(ASX200$Date))
NSEI$Date <- as.character(mdy(NSEI$Date))
SSEC$Date <- as.character(mdy(SSEC$Date))
colnames(covid2)[4] = "Date"
covid_US <- covid2 %>% filter(location == "United States")
covid_AUS <- covid2 %>% filter(location == "Australia")
covid_IND <- covid2 %>% filter(location == "India")
covid_JPN <- covid2 %>% filter(location == "Japan")
covid_CHN <- covid2 %>% filter(location == "China")
covid_US
df_1 = inner_join(sp500, covid_US, by = "Date")
df_2 = inner_join(TOPIX, covid_JPN, by = "Date")
df_3 = inner_join(ASX200, covid_AUS, by = "Date")
df_4 = inner_join(NSEI, covid_IND, by = "Date")
df_5 = inner_join(SSEC, covid_CHN, by = "Date")
covid_joined <- rbind(df_1, df_2, df_3, df_4, df_5)
covid_joined$Date <- ymd(covid_joined$Date)
covid_joined$Price <- as.numeric(gsub(",","",covid_joined$Price))
covid_joined$Open <- as.numeric(gsub(",","",covid_joined$Open))
covid_joined$High <- as.numeric(gsub(",","",covid_joined$High))
covid_joined$Low <- as.numeric(gsub(",","",covid_joined$Low))
covid_joined$Change.. <- as.numeric(gsub("%","",covid_joined$Change..))
# example analysis for US
US_data = covid_joined[covid_joined$location == "United States",]
plot(US_data$Price ~ US_data$Date)
#covid_clean
df_q2_chn = df_q2 %>% filter(location == "China")
df_q2_jpn = df_q2 %>% filter(location == "Japan")
df_q2_usa = df_q2 %>% filter(location == "United States")
df_q2_ind = df_q2 %>% filter(location == "India")
chn_beta_price_case = beta(df_q2_chn$Lprice, df_q2_chn$Lnew_cases)
jpn_beta_price_case = beta(df_q2_jpn$Lprice, df_q2_jpn$Lnew_cases)
usa_beta_price_case = beta(df_q2_usa$Lprice, df_q2_usa$Lnew_cases)
ind_beta_price_case = beta(df_q2_ind$Lprice, df_q2_ind$Lnew_cases)
aus_beta_price_case = beta(df_q2_aus$Lprice, df_q2_aus$Lnew_cases)
plot(jpn_beta_price_case,type="l")
plot(chn_beta_price_case,type="l", col = "red")
plot(aus_beta_price_case,type="l", col = "light blue")
plot(ind_beta_price_case,type="l", col = "light green")
plot(usa_beta_price_case,type="l", col = "yellow")
#covid_clean
df_q2_chn = df_q2 %>% filter(location == "China")
df_q2_jpn = df_q2 %>% filter(location == "Japan")
df_q2_usa = df_q2 %>% filter(location == "United States")
df_q2_ind = df_q2 %>% filter(location == "India")
chn_beta_price_case = beta(df_q2_chn$Lprice, df_q2_chn$Lnew_cases)
jpn_beta_price_case = beta(df_q2_jpn$Lprice, df_q2_jpn$Lnew_cases)
usa_beta_price_case = beta(df_q2_usa$Lprice, df_q2_usa$Lnew_cases)
ind_beta_price_case = beta(df_q2_ind$Lprice, df_q2_ind$Lnew_cases)
aus_beta_price_case = beta(df_q2_aus$Lprice, df_q2_aus$Lnew_cases)
plot(jpn_beta_price_case,type="l")
plot(chn_beta_price_case,type="l", col = "red")
plot(aus_beta_price_case,type="l", col = "light blue")
plot(ind_beta_price_case,type="l", col = "light green")
plot(usa_beta_price_case,type="l", col = "yellow")
library(tidyverse)
library(ggplot2)
library(maps)
library(plotly)
library(caret)
library(dplyr)
library(lubridate)
library(scales)
library(magrittr)
library(tidyr)
library(pkr)
library(plotly)
library(ggthemes)
library(tseries)
library(quantmod)
library(roll)
library(plotly)
library(gganimate)
library(tidyquant)
##########################
# THIS IS THE FINAL JOIN #
#######################################################################
# use covid_joined for your work and filter it to country if you need #
#######################################################################
covid = read.csv("owid-covid-data.csv")
sp500 = read.csv("SPY Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for US
TOPIX = read.csv("TOPIX Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for Japan
ASX200 = read.csv("S&P_ASX 200 Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for Australia
NSEI = read.csv("Nifty 50 Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for India
SSEC = read.csv("Shanghai Composite Historical Data.csv", fileEncoding = 'UTF-8-BOM') # this is for China
covid2 <- covid
sp <- sp500
sp$Change.. <- as.numeric(gsub("%","",sp$Change..))
max = max(sp$Change..)
max
covid2$date = as.character(ymd(covid2$date))
sp500$Date <- as.character(mdy(sp500$Date))
TOPIX$Date <- as.character(mdy(TOPIX$Date))
ASX200$Date <- as.character(mdy(ASX200$Date))
NSEI$Date <- as.character(mdy(NSEI$Date))
SSEC$Date <- as.character(mdy(SSEC$Date))
colnames(covid2)[4] = "Date"
covid_US <- covid2 %>% filter(location == "United States")
covid_AUS <- covid2 %>% filter(location == "Australia")
covid_IND <- covid2 %>% filter(location == "India")
covid_JPN <- covid2 %>% filter(location == "Japan")
covid_CHN <- covid2 %>% filter(location == "China")
covid_US
df_1 = inner_join(sp500, covid_US, by = "Date")
df_2 = inner_join(TOPIX, covid_JPN, by = "Date")
df_3 = inner_join(ASX200, covid_AUS, by = "Date")
df_4 = inner_join(NSEI, covid_IND, by = "Date")
df_5 = inner_join(SSEC, covid_CHN, by = "Date")
covid_joined <- rbind(df_1, df_2, df_3, df_4, df_5)
covid_joined$Date <- ymd(covid_joined$Date)
covid_joined$Price <- as.numeric(gsub(",","",covid_joined$Price))
covid_joined$Open <- as.numeric(gsub(",","",covid_joined$Open))
covid_joined$High <- as.numeric(gsub(",","",covid_joined$High))
covid_joined$Low <- as.numeric(gsub(",","",covid_joined$Low))
covid_joined$Change.. <- as.numeric(gsub("%","",covid_joined$Change..))
# example analysis for US
US_data = covid_joined[covid_joined$location == "United States",]
plot(US_data$Price ~ US_data$Date)
covid_joined <- covid_joined %>%
filter(Date >= "2020-03-11") %>%
mutate(Year_category = case_when(
Date >= "2020-03-11" & Date < "2021-01-01" ~ "1st year",
Date >= "2021-01-01" & Date < "2022-01-01" ~ "2nd year",
Date >= "2022-01-01" & Date < "2023-01-01" ~ "3rd year (ongoing)"))
# not using the ggplot but leaving it here in case, instead using the plotly becuase it is interactive
#ggplot(covid_joined, aes(x=Change.., y = location, fill = Year_category)) + geom_boxplot(outlier.colour="black",
#             outlier.size=0.3, notch=TRUE) + theme_clean() + labs(y = "country", x = "Distribution of daily #gains/losses (%)") +
#ggtitle("Distrubtion of daily gains/losses during the years of the pandemic")
fig <- plot_ly(covid_joined, x = ~Change.., y = ~location, color = ~Year_category, type = "box") %>% layout(boxmode = "group", title = 'Distribution of gains and losses over the pandemic',
xaxis = list(showgrid = TRUE),
yaxis = list(showgrid = TRUE))
unique(covid_joined$location)
head(covid_joined)
# Asset tickers
tickers = c("SPY")
price_data <- tq_get(tickers,
from = '2017-12-27',
to = '2021-12-27',
get = 'stock.prices')
price_data
ret_data <- price_data %>%
group_by(symbol) %>%
tq_transmute(select = adjusted,
mutate_fun = periodReturn,
period = "daily",
col_rename = "ret")
head(covid_joined)
# Asset tickers
tickers = c("SPY")
price_data <- tq_get(tickers,
from = '2017-12-27',
to = '2021-12-27',
get = 'stock.prices')
price_data
ret_data <- price_data %>%
group_by(symbol) %>%
tq_transmute(select = adjusted,
mutate_fun = periodReturn,
period = "daily",
col_rename = "ret")
covid_joined$Change.. <- as.numeric(gsub("%","",covid_joined$Change..))
sp500$cr <- (as.numeric(gsub("%","",sp500$Change..))/100) %>% mutate(cr = cumprod(1 + sp500$cr))
port_ret_tidyquant <- ret_data %>%
tq_portfolio(assets_col = symbol,
returns_col = ret,
col_rename = 'port_ret',
geometric = FALSE)
covid_joined$Change.. <- as.numeric(gsub("%","",covid_joined$Change..))
sp500$cr <- (as.numeric(gsub("%","",sp500$Change..))/100) %>% mutate(cr = cumprod(1 + sp500$cr))
library(tidyquant)
# Asset tickers
tickers = c('BND', 'VB', 'VEA', 'VOO', 'VWO')
# Asset weights
wts = c(0.1,0.2,0.25,0.25,0.2)
price_data <- tq_get(tickers,
from = '2013-01-01',
to = '2018-03-01',
get = 'stock.prices')
ret_data <- price_data %>%
group_by(symbol) %>%
tq_transmute(select = adjusted,
mutate_fun = periodReturn,
period = "daily",
col_rename = "ret")
port_ret_tidyquant <- ret_data %>%
tq_portfolio(assets_col = symbol,
returns_col = ret,
weights = wts,
col_rename = 'port_ret',
geometric = FALSE)
df_q2_scatter_plot_Lprice_var_fac = function(plot_df, xvar, xvar_lab, title) {
p1 = ggplot(data = plot_df, aes(x = xvar, group=location, color = location)) +
geom_point(aes(y=Lprice)) +
facet_grid(location ~ .) +
ggtitle(title) + xlab(xvar_lab) +
ylab("Price") +
theme_bw()
p1
}
df_q2$Lprice = log(df_q2$Price/lag(df_q2$Price))
df_q2$Lnew_vaccinations = log(df_q2$new_vaccinations/lag(df_q2$new_vaccinations))
df_q2$Lnew_tests = log(df_q2$new_tests/lag(df_q2$new_tests))
df_q2$Lnew_cases = log(df_q2$new_cases/lag(df_q2$new_cases))
df_q2_scatter_plot_Lprice_var_fac(df_q2, df_q2$Lnew_tests, "new_tests", "log return(Price)~Log return(new_tests)")
df_q2_scatter_plot_Lprice_var_fac(df_q2, df_q2$Lnew_vaccinations, "new_vaccinations", "Log return(Price)~Log return(new_vaccinations)")
df_q2_scatter_plot_Lprice_var_fac(df_q2, df_q2$Lnew_cases, "new_vaccinations", "Log return(Price)~Log return(new_cases)")
#colnames(df_q2)
df_q2_date = df_q2 %>% drop_na(new_cases, new_tests, new_vaccinations) %>% group_by(Date) %>% summarize(avg_price = mean(Price), avg_new_cases = mean(new_cases), avg_new_tests = mean(new_tests), avg_new_vac = mean(new_vaccinations))
p1 = ggplot(data = df_q2_date, aes(x = Date)) + geom_line(aes(y=avg_new_cases), color = 'red') +
geom_line(aes(y=avg_new_vac), color = 'light green') +
geom_line(aes(y=avg_new_tests), color = 'light blue') +
ggtitle("covid data plot") + xlab("date") +
ylab("values")+
theme_bw()
ggplotly(p1)
df_q2_cor = df_q2 %>% drop_na(new_vaccinations, new_tests, new_cases, Price) %>% select(new_vaccinations, new_tests, new_cases, Price)
cor(df_q2_cor)
qtlcharts::iplotCorr(df_q2_cor)
#covid_clean
df_q2_beta = df_q2 %>% drop_na(Lprice2, Lnew_cases2)
df_q2_cor = df_q2 %>% drop_na(new_vaccinations, new_tests, new_cases, Price) %>% select(new_vaccinations, new_tests, new_cases, Price)
cor(df_q2_cor)
qtlcharts::iplotCorr(df_q2_cor)
wts_tbl <- tibble(symbol = tickers,
wts = wts)
ret_data <- left_join(ret_data,wts_tbl, by = 'symbol')
ret_data <- ret_data %>%
mutate(wt_return = wts * ret)
library(tidyverse)
library(ggplot2)
library(maps)
library(plotly)
library(caret)
library(dplyr)
library(lubridate)
library(scales)
library(magrittr)
library(tidyr)
library(pkr)
library(plotly)
library(ggthemes)
library(tseries)
library(quantmod)
library(roll)
library(plotly)
library(gganimate)
library(tidyquant)
mySymbols <- c('AMZN', '^GSPC','NFLX','MSFT','GOOG','NVAX','DIS','WMT','COST','V','FB','AXP','CMCSA','PFE','MRNA')
myStocks <-lapply(mySymbols, function(x) {getSymbols(x, src = "yahoo",
from = "2020-01-01",
to = "2022-04-04",
periodicity = "daily",
auto.assign=FALSE)} )
df_q2_scatter_plot_Lprice_var_fac = function(plot_df, xvar, xvar_lab, title) {
p1 = ggplot(data = plot_df, aes(x = xvar, group=location, color = location)) +
geom_point(aes(y=Lprice)) +
facet_grid(location ~ .) +
ggtitle(title) + xlab(xvar_lab) +
ylab("Price") +
theme_bw()
p1
}
df_q2$Lprice = log(df_q2$Price/lag(df_q2$Price))
df_q2$Lnew_vaccinations = log(df_q2$new_vaccinations/lag(df_q2$new_vaccinations))
df_q2$Lnew_tests = log(df_q2$new_tests/lag(df_q2$new_tests))
df_q2$Lnew_cases = log(df_q2$new_cases/lag(df_q2$new_cases))
df_q2_scatter_plot_Lprice_var_fac(df_q2, df_q2$Lnew_tests, "new_tests", "log return(Price)~Log return(new_tests)")
df_q2_scatter_plot_Lprice_var_fac(df_q2, df_q2$Lnew_vaccinations, "new_vaccinations", "Log return(Price)~Log return(new_vaccinations)")
df_q2_scatter_plot_Lprice_var_fac(df_q2, df_q2$Lnew_cases, "new_vaccinations", "Log return(Price)~Log return(new_cases)")
covid = read.csv("owid-covid-data.csv")
ASX200 = read.csv("S&P_ASX 200 Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for Australia
df_q2 = covid_joined
colnames(df_q2)[7] = 'Change'
write.csv(df_q2,"df_q2.csv")
df_q2_scatter_plot_Lprice_var_fac = function(plot_df, xvar, xvar_lab, title) {
p1 = ggplot(data = plot_df, aes(x = xvar, group=location, color = location)) +
geom_point(aes(y=Lprice)) +
facet_grid(location ~ .) +
ggtitle(title) + xlab(xvar_lab) +
ylab("Price") +
theme_bw()
p1
}
df_q2$Lprice = log(df_q2$Price/lag(df_q2$Price))
df_q2$Lnew_vaccinations = log(df_q2$new_vaccinations/lag(df_q2$new_vaccinations))
df_q2$Lnew_tests = log(df_q2$new_tests/lag(df_q2$new_tests))
df_q2$Lnew_cases = log(df_q2$new_cases/lag(df_q2$new_cases))
df_q2_scatter_plot_Lprice_var_fac(df_q2, df_q2$Lnew_tests, "new_tests", "log return(Price)~Log return(new_tests)")
df_q2_scatter_plot_Lprice_var_fac(df_q2, df_q2$Lnew_vaccinations, "new_vaccinations", "Log return(Price)~Log return(new_vaccinations)")
df_q2_scatter_plot_Lprice_var_fac(df_q2, df_q2$Lnew_cases, "new_vaccinations", "Log return(Price)~Log return(new_cases)")
df_q2_cor = df_q2 %>% drop_na(new_vaccinations, new_tests, new_cases, Price) %>% select(new_vaccinations, new_tests, new_cases, Price)
cor(df_q2_cor)
qtlcharts::iplotCorr(df_q2_cor)
