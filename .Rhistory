#model_rpart <- train(level~., data=df_q2_cor, trControl=train_control, method="rpart")
model_pls <- train(level~., data=df_q2_cor, trControl=train_control, method="pls")
# Data input and processing
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(ggplot2)
library(maps)
library(plotly)
library(caret)
library(dplyr)
library(lubridate)
library(scales)
library(magrittr)
library(tidyr)
library(pkr)
library(plotly)
library(ggthemes)
library(tseries)
library(quantmod)
library(roll)
library(plotly)
library(gganimate)
library(tidyquant)
library(caret)
library(klaR)
library(zoo)
covid = read.csv("owid-covid-data.csv")
sp500 = read.csv("SPY Historical Data.csv", fileEncoding = 'UTF-8-BOM')
TOPIX = read.csv("TOPIX Historical Data.csv", fileEncoding = 'UTF-8-BOM')
ASX200 = read.csv("S&P_ASX 200 Historical Data.csv", fileEncoding = 'UTF-8-BOM')
NSEI = read.csv("Nifty 50 Historical Data.csv", fileEncoding = 'UTF-8-BOM')
SSEC = read.csv("Shanghai Composite Historical Data.csv", fileEncoding = 'UTF-8-BOM')
covid2 <- covid
covid2$date = as.character(ymd(covid2$date))
sp500$Date <- as.character(mdy(sp500$Date))
TOPIX$Date <- as.character(mdy(TOPIX$Date))
ASX200$Date <- as.character(mdy(ASX200$Date))
NSEI$Date <- as.character(mdy(NSEI$Date))
SSEC$Date <- as.character(mdy(SSEC$Date))
colnames(covid2)[4] = "Date"
covid_US <- covid2 %>% filter(location == "United States")
covid_AUS <- covid2 %>% filter(location == "Australia")
covid_IND <- covid2 %>% filter(location == "India")
covid_JPN <- covid2 %>% filter(location == "Japan")
covid_CHN <- covid2 %>% filter(location == "China")
df_1 = inner_join(sp500, covid_US, by = "Date")
df_2 = inner_join(TOPIX, covid_JPN, by = "Date")
df_3 = inner_join(ASX200, covid_AUS, by = "Date")
df_4 = inner_join(NSEI, covid_IND, by = "Date")
df_5 = inner_join(SSEC, covid_CHN, by = "Date")
covid_joined <- rbind(df_1, df_2, df_3, df_4, df_5)
covid_joined$Date <- ymd(covid_joined$Date)
covid_joined$Price <- as.numeric(gsub(",","",covid_joined$Price))
covid_joined$Open <- as.numeric(gsub(",","",covid_joined$Open))
covid_joined$High <- as.numeric(gsub(",","",covid_joined$High))
covid_joined$Low <- as.numeric(gsub(",","",covid_joined$Low))
covid_joined$Change.. <- as.numeric(gsub("%","",covid_joined$Change..))
covid_joined <- covid_joined %>%
filter(Date >= "2020-03-11") %>%
mutate(Year_category = case_when(
Date >= "2020-03-11" & Date < "2021-01-01" ~ "1st year",
Date >= "2021-01-01" & Date < "2022-01-01" ~ "2nd year",
Date >= "2022-01-01" & Date < "2023-01-01" ~ "3rd year (ongoing)"))
fig <- plot_ly(covid_joined, x = ~Change.., y = ~location, color = ~Year_category, type = "box") %>% layout(boxmode = "group", title = 'Distribution of gains and losses over the pandemic',
xaxis = list(showgrid = TRUE),
yaxis = list(showgrid = TRUE))
unique(covid_joined$location)
df_q2 = covid_joined
colnames(df_q2)[7] = 'Change'
write.csv(df_q2,"df_q2.csv")
df_q2 = as.data.frame(df_q2[order(df_q2$Date),]) %>% drop_na(new_vaccinations, new_tests, new_cases, Price)
df_q2_cor = df_q2 %>% dplyr::select(new_vaccinations, new_tests, new_cases, Price)
cor(df_q2_cor)
qtlcharts::iplotCorr(df_q2_cor)
mean(df_q2_cor$Price)
median(df_q2_cor$Price)
quantile(df_q2_cor$Price, 0.25)
df_q2_cor <- df_q2_cor %>% mutate(level = case_when((df_q2_cor$Price <= 1978.28) ~ "Low",
((df_q2_cor$Price > 1978.28) & (df_q2_cor$Price < 6511.446)) ~ "Medium",
(df_q2_cor$Price > 6511.446) ~ "High"
))
df_q2_cor$level <- as.factor(df_q2_cor$level)
# define training control
train_control <- trainControl(method="repeatedcv", number=10, repeats=3)
# train the model
model_knn <- train(level~., data=df_q2_cor, trControl=train_control, method="knn")
#model_rpart <- train(level~., data=df_q2_cor, trControl=train_control, method="rpart")
model_pls <- train(level~., data=df_q2_cor, trControl=train_control, method="pls")
model_rda <- train(level~., data=df_q2_cor, trControl=train_control, method="rda")
bodyfat <- read.csv("bodyfat.csv")
bodyfat
library(tidyverse)
library(ggplot2)
library(maps)
library(plotly)
library(caret)
library(dplyr)
library(lubridate)
library(scales)
library(magrittr)
library(tidyr)
library(pkr)
library(plotly)
library(ggthemes)
library(tseries)
library(quantmod)
library(roll)
library(plotly)
library(gganimate)
library(tidyquant)
library(caret)
library(klaR)
library(zoo)
library(pls)
library(PerformanceAnalytics)
library(TTR)
##########################
# THIS IS THE FINAL JOIN #
#######################################################################
# use covid_joined for your work and filter it to country if you need #
#######################################################################
covid = read.csv("owid-covid-data.csv")
sp500 = read.csv("SPY Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for US
TOPIX = read.csv("TOPIX Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for Japan
ASX200 = read.csv("S&P_ASX 200 Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for Australia
NSEI = read.csv("Nifty 50 Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for India
SSEC = read.csv("Shanghai Composite Historical Data.csv", fileEncoding = 'UTF-8-BOM') # this is for China
covid2 <- covid
covid2$date = as.character(ymd(covid2$date))
sp500$Date <- as.character(mdy(sp500$Date))
TOPIX$Date <- as.character(mdy(TOPIX$Date))
ASX200$Date <- as.character(mdy(ASX200$Date))
NSEI$Date <- as.character(mdy(NSEI$Date))
SSEC$Date <- as.character(mdy(SSEC$Date))
colnames(covid2)[4] = "Date"
covid_US <- covid2 %>% filter(location == "United States")
covid_AUS <- covid2 %>% filter(location == "Australia")
covid_IND <- covid2 %>% filter(location == "India")
covid_JPN <- covid2 %>% filter(location == "Japan")
covid_CHN <- covid2 %>% filter(location == "China")
covid_US
df_1 = inner_join(sp500, covid_US, by = "Date")
df_2 = inner_join(TOPIX, covid_JPN, by = "Date")
df_3 = inner_join(ASX200, covid_AUS, by = "Date")
df_4 = inner_join(NSEI, covid_IND, by = "Date")
df_5 = inner_join(SSEC, covid_CHN, by = "Date")
covid_joined <- rbind(df_1, df_2, df_3, df_4, df_5)
covid_joined$Date <- ymd(covid_joined$Date)
covid_joined$Price <- as.numeric(gsub(",","",covid_joined$Price))
covid_joined$Open <- as.numeric(gsub(",","",covid_joined$Open))
covid_joined$High <- as.numeric(gsub(",","",covid_joined$High))
covid_joined$Low <- as.numeric(gsub(",","",covid_joined$Low))
covid_joined$Change.. <- as.numeric(gsub("%","",covid_joined$Change..))
# example analysis for US
US_data = covid_joined[covid_joined$location == "United States",]
plot(US_data$Price ~ US_data$Date)
covid_joined <- covid_joined %>%
filter(Date >= "2020-03-11") %>%
mutate(Year_category = case_when(
Date >= "2020-03-11" & Date < "2021-01-01" ~ "1st year",
Date >= "2021-01-01" & Date < "2022-01-01" ~ "2nd year",
Date >= "2022-01-01" & Date < "2023-01-01" ~ "3rd year (ongoing)"))
# not using the ggplot but leaving it here in case, instead using the plotly becuase it is interactive
#ggplot(covid_joined, aes(x=Change.., y = location, fill = Year_category)) + geom_boxplot(outlier.colour="black",
#             outlier.size=0.3, notch=TRUE) + theme_clean() + labs(y = "country", x = "Distribution of daily #gains/losses (%)") +
#ggtitle("Distrubtion of daily gains/losses during the years of the pandemic")
fig <- plot_ly(covid_joined, x = ~Change.., y = ~location, color = ~Year_category, type = "box") %>% layout(boxmode = "group", title = 'Distribution of gains and losses over the pandemic',
xaxis = list(showgrid = TRUE),
yaxis = list(showgrid = TRUE))
unique(covid_joined$location)
covid = read.csv("owid-covid-data.csv")
ASX200 = read.csv("S&P_ASX 200 Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for Australia
df_q2 = covid_joined
colnames(df_q2)[7] = 'Change'
write.csv(df_q2,"df_q2.csv")
mySymbols <- c('AMZN', '^GSPC','NFLX','MSFT','GOOG','NVAX','DIS','WMT','COST','V','FB','AXP','CMCSA','PFE','MRNA')
myStocks <-lapply(mySymbols, function(x) {getSymbols(x, src = "yahoo",
from = "2020-01-01",
to = "2022-04-04",
periodicity = "daily",
auto.assign=FALSE)} )
df_q2_scatter_plot_Lprice_var_fac = function(plot_df, xvar, xvar_lab, title) {
p1 = ggplot(data = plot_df, aes(x = xvar, group=location, color = location)) +
geom_point(aes(y=Lprice)) +
facet_grid(location ~ .) +
ggtitle(title) + xlab(xvar_lab) +
ylab("Price") +
theme_bw()
p1
}
df_q2$Lprice = log(df_q2$Price/lag(df_q2$Price))
df_q2$Lnew_vaccinations = log(df_q2$new_vaccinations/lag(df_q2$new_vaccinations))
df_q2$Lnew_tests = log(df_q2$new_tests/lag(df_q2$new_tests))
df_q2$Lnew_cases = log(df_q2$new_cases/lag(df_q2$new_cases))
df_q2_scatter_plot_Lprice_var_fac(df_q2, df_q2$Lnew_tests, "new_tests", "log return(Price)~Log return(new_tests)")
df_q2_scatter_plot_Lprice_var_fac(df_q2, df_q2$Lnew_vaccinations, "new_vaccinations", "Log return(Price)~Log return(new_vaccinations)")
df_q2_scatter_plot_Lprice_var_fac(df_q2, df_q2$Lnew_cases, "new_vaccinations", "Log return(Price)~Log return(new_cases)")
mySymbols <- c('AMZN', '^GSPC','NFLX','MSFT','GOOG','NVAX','DIS','WMT','COST','V','FB','AXP','CMCSA','PFE','MRNA')
myStocks <-lapply(mySymbols, function(x) {getSymbols(x, src = "yahoo",
from = "2020-01-01",
to = "2022-04-04",
periodicity = "daily",
auto.assign=FALSE)} )
#colnames(df_q2)
df_q2_date = df_q2 %>% drop_na(new_cases, new_tests, new_vaccinations) %>% group_by(Date) %>% summarize(avg_price = mean(Price), avg_new_cases = mean(new_cases), avg_new_tests = mean(new_tests), avg_new_vac = mean(new_vaccinations))
p1 = ggplot(data = df_q2_date, aes(x = Date)) + geom_line(aes(y=avg_new_cases), color = 'red') +
geom_line(aes(y=avg_new_vac), color = 'light green') +
geom_line(aes(y=avg_new_tests), color = 'light blue') +
ggtitle("covid data plot") + xlab("date") +
ylab("values")+
theme_bw()
ggplotly(p1)
df_q2 = as.data.frame(df_q2[order(df_q2$Date),]) %>% drop_na(new_vaccinations, new_tests, new_cases, Price)
df_q2_cor = df_q2 %>% dplyr::select(new_vaccinations, new_tests, new_cases, Price)
cor(df_q2_cor)
qtlcharts::iplotCorr(df_q2_cor)
df_q2_date = df_q2 %>% group_by(Date) %>% summarize(avg_price = mean(Price), avg_new_cases = mean(new_cases), avg_new_tests = mean(new_tests), avg_new_vac = mean(new_vaccinations))
nrow_df_q2 = 360
i = 1
cor1 <- list()
time_ls <- list()
j = 1
while (i <= nrow_df_q2) {
subset <- df_q2_date[i:(i+29),]
cor1[[j]] <- cor.test(subset$avg_price,subset$avg_new_vac, method = "pearson")
time_ls[[j]] = subset$Date[1]
print(time_ls[[j]])
j = j + 1
i = i + 30
}
out <- lapply(cor1, function(x) c(x$estimate, x$conf.int, x$p.value))
D1 <- data.frame(cbind(index = seq(length(out)), do.call(rbind, out)))
names(D1)[2:ncol(D1)] <- c('estimate', paste0('conf.int', 1:2), 'p.value')
#D1
i = 1
cor2 <- list()
j = 1
while (i <= nrow_df_q2) {
subset <- df_q2_date[i:(i+29),]
cor2[[j]] <- cor.test(subset$avg_new_tests,subset$avg_new_cases, method = "pearson")
j = j + 1
i = i + 30
}
out <- lapply(cor2, function(x) c(x$estimate, x$conf.int, x$p.value))
D2 <- data.frame(cbind(index = seq(length(out)), do.call(rbind, out)))
names(D2)[2:ncol(D2)] <- c('estimate', paste0('conf.int', 1:2), 'p.value')
df_q2_date = as.data.frame(time_ls)
df_q2_date = as.data.frame(t(df_q2_date))
df_q2_date
colnames(D1)[1] ="start_date"
colnames(D1)[2] ="avg_price_avg_new_vacc"
colnames(D1)[3] ="avg_new_tests_avg_new_cases"
#,"avg_price_avg_new_vacc","avg_new_tests_avg_new_cases"
df_q2_cor_time = D1 %>% mutate(start_date = df_q2_date$V1, avg_new_tests_avg_new_cases = D2$estimate)
#cor_df_time
df_q2_cor_time$start_date = as.Date(df_q2_cor_time$start_date)
df_q2_cor_time = df_q2_cor_time[ , -which(names(df_q2_cor_time) %in% c("conf.int2","p.value"))]
df_q2_cor_time
p1 = ggplot(data = df_q2_cor_time, aes(x = start_date)) + geom_line(aes(y=avg_new_tests_avg_new_cases, colour = "avg new_tests ~ avg new_cases"), size = 0.8) +
geom_line(aes(y=avg_price_avg_new_vacc, colour = 'avg price ~ avg new_vacc'), size = 0.8) +
scale_colour_manual("",
values = c("avg new_tests ~ avg new_cases"="#FF00CC", "avg price ~ avg new_vacc"="#3333FF")) +
ggtitle("Corelation Between Price and New vaccinations, New_tests and New_cases") + xlab("Date") +
ylab("Coorelation")+
#scale_fill_manual(values = c("light green", "yellow"))+
theme_bw()
ggplotly(p1)
library("RColorBrewer")
display.brewer.all(n=5)
display.brewer.pal(n = 9, name = 'RdPu')
# scale_fill_brewer(palette = "Dark2")+
set.seed(1)
# will be using this later as ideally with the shiny app we can pick and predict a particlar stock
mySymbols <- c('AMZN', '^GSPC','NFLX','MSFT','GOOG','NVAX','DIS','WMT','COST','V','FB','AXP','CMCSA','PFE','MRNA')
myStocks <-lapply(mySymbols, function(x) {getSymbols(x, src = "yahoo",
from = "2020-01-01",
to = "2022-04-04",
periodicity = "daily",
auto.assign=FALSE)} )
# data joining so we are able to consult the ML model
algo_df <- inner_join(prediction_df[c("Date", "pred")], Prices_joined, by = "Date")
library(tidyverse)
library(ggplot2)
library(maps)
library(plotly)
library(caret)
library(dplyr)
library(lubridate)
library(scales)
library(magrittr)
library(tidyr)
library(pkr)
library(plotly)
library(ggthemes)
library(tseries)
library(quantmod)
library(roll)
library(plotly)
library(gganimate)
library(tidyquant)
library(caret)
library(klaR)
library(zoo)
library(pls)
library(PerformanceAnalytics)
library(TTR)
library(tidyverse)
library(ggplot2)
library(maps)
library(plotly)
library(caret)
library(dplyr)
library(lubridate)
library(scales)
library(magrittr)
library(tidyr)
library(pkr)
library(plotly)
library(ggthemes)
library(tseries)
library(quantmod)
library(roll)
library(plotly)
library(gganimate)
library(tidyquant)
library(caret)
library(klaR)
library(zoo)
library(pls)
library(PerformanceAnalytics)
library(TTR)
install.packages("quantmod")
library(tidyverse)
library(ggplot2)
library(maps)
library(plotly)
library(caret)
library(dplyr)
library(lubridate)
library(scales)
library(magrittr)
library(tidyr)
library(pkr)
library(plotly)
library(ggthemes)
library(tseries)
library(quantmod)
library(roll)
library(plotly)
library(gganimate)
library(tidyquant)
library(caret)
library(klaR)
library(zoo)
library(pls)
library(PerformanceAnalytics)
library(TTR)
##########################
# THIS IS THE FINAL JOIN #
#######################################################################
# use covid_joined for your work and filter it to country if you need #
#######################################################################
covid = read.csv("owid-covid-data.csv")
sp500 = read.csv("SPY Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for US
TOPIX = read.csv("TOPIX Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for Japan
ASX200 = read.csv("S&P_ASX 200 Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for Australia
NSEI = read.csv("Nifty 50 Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for India
SSEC = read.csv("Shanghai Composite Historical Data.csv", fileEncoding = 'UTF-8-BOM') # this is for China
covid2 <- covid
covid2$date = as.character(ymd(covid2$date))
sp500$Date <- as.character(mdy(sp500$Date))
TOPIX$Date <- as.character(mdy(TOPIX$Date))
ASX200$Date <- as.character(mdy(ASX200$Date))
NSEI$Date <- as.character(mdy(NSEI$Date))
SSEC$Date <- as.character(mdy(SSEC$Date))
colnames(covid2)[4] = "Date"
covid_US <- covid2 %>% filter(location == "United States")
covid_AUS <- covid2 %>% filter(location == "Australia")
covid_IND <- covid2 %>% filter(location == "India")
covid_JPN <- covid2 %>% filter(location == "Japan")
covid_CHN <- covid2 %>% filter(location == "China")
covid_US
df_1 = inner_join(sp500, covid_US, by = "Date")
df_2 = inner_join(TOPIX, covid_JPN, by = "Date")
df_3 = inner_join(ASX200, covid_AUS, by = "Date")
df_4 = inner_join(NSEI, covid_IND, by = "Date")
df_5 = inner_join(SSEC, covid_CHN, by = "Date")
covid_joined <- rbind(df_1, df_2, df_3, df_4, df_5)
covid_joined$Date <- ymd(covid_joined$Date)
covid_joined$Price <- as.numeric(gsub(",","",covid_joined$Price))
covid_joined$Open <- as.numeric(gsub(",","",covid_joined$Open))
covid_joined$High <- as.numeric(gsub(",","",covid_joined$High))
covid_joined$Low <- as.numeric(gsub(",","",covid_joined$Low))
covid_joined$Change.. <- as.numeric(gsub("%","",covid_joined$Change..))
# example analysis for US
US_data = covid_joined[covid_joined$location == "United States",]
plot(US_data$Price ~ US_data$Date)
covid_joined <- covid_joined %>%
filter(Date >= "2020-03-11") %>%
mutate(Year_category = case_when(
Date >= "2020-03-11" & Date < "2021-01-01" ~ "1st year",
Date >= "2021-01-01" & Date < "2022-01-01" ~ "2nd year",
Date >= "2022-01-01" & Date < "2023-01-01" ~ "3rd year (ongoing)"))
# not using the ggplot but leaving it here in case, instead using the plotly becuase it is interactive
#ggplot(covid_joined, aes(x=Change.., y = location, fill = Year_category)) + geom_boxplot(outlier.colour="black",
#             outlier.size=0.3, notch=TRUE) + theme_clean() + labs(y = "country", x = "Distribution of daily #gains/losses (%)") +
#ggtitle("Distrubtion of daily gains/losses during the years of the pandemic")
fig <- plot_ly(covid_joined, x = ~Change.., y = ~location, color = ~Year_category, type = "box") %>% layout(boxmode = "group", title = 'Distribution of gains and losses over the pandemic',
xaxis = list(showgrid = TRUE),
yaxis = list(showgrid = TRUE))
unique(covid_joined$location)
covid = read.csv("owid-covid-data.csv")
ASX200 = read.csv("S&P_ASX 200 Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for Australia
df_q2 = covid_joined
colnames(df_q2)[7] = 'Change'
write.csv(df_q2,"df_q2.csv")
mySymbols <- c('AMZN', '^GSPC','NFLX','MSFT','GOOG','NVAX','DIS','WMT','COST','V','FB','AXP','CMCSA','PFE','MRNA')
myStocks <-lapply(mySymbols, function(x) {getSymbols(x, src = "yahoo",
from = "2020-01-01",
to = "2022-04-04",
periodicity = "daily",
auto.assign=FALSE)} )
library(tidyverse)
library(ggplot2)
library(maps)
library(plotly)
library(caret)
library(dplyr)
library(lubridate)
library(scales)
library(magrittr)
library(tidyr)
library(pkr)
library(plotly)
library(ggthemes)
library(tseries)
library(quantmod)
library(roll)
library(plotly)
library(gganimate)
library(tidyquant)
library(caret)
library(klaR)
library(zoo)
library(pls)
library(PerformanceAnalytics)
library(TTR)
##########################
# THIS IS THE FINAL JOIN #
#######################################################################
# use covid_joined for your work and filter it to country if you need #
#######################################################################
covid = read.csv("owid-covid-data.csv")
sp500 = read.csv("SPY Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for US
TOPIX = read.csv("TOPIX Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for Japan
ASX200 = read.csv("S&P_ASX 200 Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for Australia
NSEI = read.csv("Nifty 50 Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for India
SSEC = read.csv("Shanghai Composite Historical Data.csv", fileEncoding = 'UTF-8-BOM') # this is for China
covid2 <- covid
covid2$date = as.character(ymd(covid2$date))
sp500$Date <- as.character(mdy(sp500$Date))
TOPIX$Date <- as.character(mdy(TOPIX$Date))
ASX200$Date <- as.character(mdy(ASX200$Date))
NSEI$Date <- as.character(mdy(NSEI$Date))
SSEC$Date <- as.character(mdy(SSEC$Date))
colnames(covid2)[4] = "Date"
covid_US <- covid2 %>% filter(location == "United States")
covid_AUS <- covid2 %>% filter(location == "Australia")
covid_IND <- covid2 %>% filter(location == "India")
covid_JPN <- covid2 %>% filter(location == "Japan")
covid_CHN <- covid2 %>% filter(location == "China")
covid_US
df_1 = inner_join(sp500, covid_US, by = "Date")
df_2 = inner_join(TOPIX, covid_JPN, by = "Date")
df_3 = inner_join(ASX200, covid_AUS, by = "Date")
df_4 = inner_join(NSEI, covid_IND, by = "Date")
df_5 = inner_join(SSEC, covid_CHN, by = "Date")
covid_joined <- rbind(df_1, df_2, df_3, df_4, df_5)
covid_joined$Date <- ymd(covid_joined$Date)
covid_joined$Price <- as.numeric(gsub(",","",covid_joined$Price))
covid_joined$Open <- as.numeric(gsub(",","",covid_joined$Open))
covid_joined$High <- as.numeric(gsub(",","",covid_joined$High))
covid_joined$Low <- as.numeric(gsub(",","",covid_joined$Low))
covid_joined$Change.. <- as.numeric(gsub("%","",covid_joined$Change..))
# example analysis for US
US_data = covid_joined[covid_joined$location == "United States",]
plot(US_data$Price ~ US_data$Date)
covid_joined <- covid_joined %>%
filter(Date >= "2020-03-11") %>%
mutate(Year_category = case_when(
Date >= "2020-03-11" & Date < "2021-01-01" ~ "1st year",
Date >= "2021-01-01" & Date < "2022-01-01" ~ "2nd year",
Date >= "2022-01-01" & Date < "2023-01-01" ~ "3rd year (ongoing)"))
# not using the ggplot but leaving it here in case, instead using the plotly becuase it is interactive
#ggplot(covid_joined, aes(x=Change.., y = location, fill = Year_category)) + geom_boxplot(outlier.colour="black",
#             outlier.size=0.3, notch=TRUE) + theme_clean() + labs(y = "country", x = "Distribution of daily #gains/losses (%)") +
#ggtitle("Distrubtion of daily gains/losses during the years of the pandemic")
fig <- plot_ly(covid_joined, x = ~Change.., y = ~location, color = ~Year_category, type = "box") %>% layout(boxmode = "group", title = 'Distribution of gains and losses over the pandemic',
xaxis = list(showgrid = TRUE),
yaxis = list(showgrid = TRUE))
unique(covid_joined$location)
covid = read.csv("owid-covid-data.csv")
ASX200 = read.csv("S&P_ASX 200 Historical Data.csv", fileEncoding = 'UTF-8-BOM') # This is for Australia
df_q2 = covid_joined
colnames(df_q2)[7] = 'Change'
write.csv(df_q2,"df_q2.csv")
mySymbols <- c('AMZN', '^GSPC','NFLX','MSFT','GOOG','NVAX','DIS','WMT','COST','V','FB','AXP','CMCSA','PFE','MRNA')
myStocks <-lapply(mySymbols, function(x) {getSymbols(x, src = "yahoo",
from = "2020-01-01",
to = "2022-04-04",
periodicity = "daily",
auto.assign=FALSE)} )
